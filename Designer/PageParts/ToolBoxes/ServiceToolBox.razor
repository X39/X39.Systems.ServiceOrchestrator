@using X39.Systems.ServiceOrchestrator.Data.Entity
@using X39.Systems.ServiceOrchestrator.Designer.PageParts.DesignView
@using X39.Systems.ServiceOrchestrator.Designer.Repositories
@using X39.Systems.ServiceOrchestrator.Designer.Services
@inject IServiceRepository _serviceRepository
@inject ITabService _tabService
@attribute [ToolBoxComponent]

<section>
    <Expander>
        <Header>
            <h1 class="accordion-header no-select pointer full-width">Services</h1>
        </Header>
        <Content>
            <AsyncContent LoadCallbackAsync="LoadCallbackAsync">
                <div class="accordion-content">
                    <div class="pointer no-select full-width" @onclick="CreateNewService">Add new Service</div>
                    <ul style="list-style-type: none;">
                        @foreach (var service in _services)
                        {
                            <li @ondblclick="() => ServiceDoubleClicked(service)">@service.Name (@service.Id)</li>
                        }
                    </ul>
                </div>
            </AsyncContent>
        </Content>
    </Expander>
</section>

@code {
    private readonly List<Service> _services = new();

    private async Task LoadCallbackAsync()
    {
        _services.Clear();
        await foreach (var service in _serviceRepository.GetServicesAsync())
        {
            _services.Add(service);
        }
    }

    private void CreateNewService()
    {
        _background.Add("Creating new service...", async (cancellationToken, _) =>
        {
            var newService = await _serviceRepository.CreateServiceAsync(cancellationToken, new Service {Name = "New Service"});
            _services.Add(newService);
        });
    }

    private void ServiceDoubleClicked(Service service)
    {
        _tabService.AddTab(new Tab(typeof(TabStringHeader), typeof(DesignTab))
        {
            HeaderParameters = { {nameof(TabStringHeader.Text), service.Name} },
            ContentParameters = {{nameof(DesignTab.DataContext), new ServiceDataContext(service)} }
        });
    }

}